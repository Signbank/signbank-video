# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-22 10:36
from __future__ import unicode_literals

from django.db import migrations
from django.db import models

# this migration can only happen if we have the dictionary app available
# because it references dictionary.Gloss, if it's not there, then there
# can't be any work to do so we can safely skip
try:
    from dictionary.models import Gloss
    dictionary_loaded = True
except Exception as e:
    dictionary_loaded = False

if dictionary_loaded:
    # define this model here so that we can migrate from it to TaggedVideo
    class GlossVideo(models.Model):
        """Legacy video model"""

        videofile = models.FileField("video file")
        gloss = models.ForeignKey('dictionary.Gloss')
        version = models.IntegerField("Version", default=0)

def copy_videos(apps, schema_editor):
    """Copy all glossvideos to taggedvideo instances"""

    if not dictionary_loaded:
        return

    Video = apps.get_model('video', 'Video')
    TaggedVideo = apps.get_model('video', 'TaggedVideo')

    for gv in GlossVideo.objects.all():
        tv, created = TaggedVideo.objects.get_or_create(category='Gloss', tag=str(gv.gloss.pk))
        vid = Video(tag=tv, videofile=gv.videofile, version=gv.version)
        vid.save()

def revert_copy(apps, schema_editor):

    if not dictionary_loaded:
        return

    Video = apps.get_model('video', 'Video')
    TaggedVideo = apps.get_model('video', 'TaggedVideo')

    TaggedVideo.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('video', '0002_auto_20170222_2133'),
    ]

    operations = [
        migrations.RunPython(copy_videos, revert_copy)
    ]
